# -*- coding: utf-8 -*-
"""Untitled12.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1eDCvPN0qLRVc5ipw3rwIErJWuw8SoUlu
"""

from flask import Flask, render_template, request, send_file
import pandas as pd
import re
import time
import requests
from bs4 import BeautifulSoup
from googlesearch import search
import threading
import os

app = Flask(__name__)
app.config['UPLOAD_FOLDER'] = 'uploads'

# Shared progress variable
progress = {
    'total': 0,
    'current': 0,
    'done': False
}

def get_company_website(company_name):
    query = f"{company_name} official site"
    for url in search(query, num=1, stop=1, pause=2):
        return url
    return None

def extract_contacts(url):
    emails, phones = set(), set()
    try:
        headers = {'User-Agent': 'Mozilla/5.0'}
        response = requests.get(url, headers=headers, timeout=5)
        if response.status_code == 200:
            soup = BeautifulSoup(response.text, 'html.parser')
            text = soup.get_text()
            emails = set(re.findall(r'[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}', text))
            phones = set(re.findall(r'\+?\d{1,4}?[\s.-]?\(?\d{2,4}\)?[\s.-]?\d{3,4}[\s.-]?\d{3,4}', text))
    except Exception as e:
        print(f"Error fetching {url}: {e}")
    return list(emails), list(phones)

def process_file(filepath, output_path):
    global progress
    df = pd.read_excel(filepath)
    company_column = df.columns[0]

    df['Website'] = ''
    df['Emails'] = ''
    df['Phones'] = ''

    total = len(df)
    progress['total'] = total
    progress['current'] = 0
    progress['done'] = False

    for i, company in enumerate(df[company_column]):
        website = get_company_website(company)
        df.at[i, 'Website'] = website if website else 'Not Found'
        if website:
            emails, phones = extract_contacts(website)
            df.at[i, 'Emails'] = ', '.join(emails)
            df.at[i, 'Phones'] = ', '.join(phones)
        progress['current'] = i + 1
        time.sleep(2)  # to avoid blocking/search bans

    df.to_excel(output_path, index=False)
    progress['done'] = True

@app.route('/')
def index():
    return render_template('index.html')

@app.route('/upload', methods=['POST'])
def upload():
    if 'file' not in request.files:
        return "No file part", 400
    file = request.files['file']
    if file.filename == '':
        return "No selected file", 400

    if not os.path.exists(app.config['UPLOAD_FOLDER']):
        os.makedirs(app.config['UPLOAD_FOLDER'])

    filepath = os.path.join(app.config['UPLOAD_FOLDER'], file.filename)
    file.save(filepath)
    output_path = os.path.join(app.config['UPLOAD_FOLDER'], 'results.xlsx')

    # Run processing in separate thread so Flask can update progress
    thread = threading.Thread(target=process_file, args=(filepath, output_path))
    thread.start()

    return "File uploaded and processing started"

@app.route('/progress')
def get_progress():
    global progress
    return {
        'total': progress['total'],
        'current': progress['current'],
        'done': progress['done']
    }

@app.route('/download')
def download():
    output_path = os.path.join(app.config['UPLOAD_FOLDER'], 'results.xlsx')
    if os.path.exists(output_path):
        return send_file(output_path, as_attachment=True)
    else:
        return "File not found", 404

if __name__ == '__main__':
    app.run(debug=True)